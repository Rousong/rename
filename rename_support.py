#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.18
#  in conjunction with Tcl version 8.6
#    Nov 10, 2018 05:22:01 PM JST  platform: Windows NT

import sys
import os

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

# 导入目录查看的方法
from tkinter.filedialog import askdirectory

# 重要的方法！！！
def set_Tk_var():
    # 全局变量 目的是可以改变文本框的内容
    global lujing
    # ？？？
    lujing = tk.StringVar()
    # 设定初始值
    lujing.set("选择要批量重命名的文件目录")

    global old_char
    old_char = tk.StringVar()
    global new_char
    new_char = tk.StringVar()


def cancle():
    print('rename_support.cancle')
    destroy_window()
    sys.stdout.flush()

def do_rename():

    global lj
    # 获取目录下所有的文件名称的列表
    all_file = os.listdir(lj)
    #获取需要替换的字符
    old = old_char.get()

    #获取新字符
    new = new_char.get()
    #查找列表内相同字段并惊醒替换
    for item in os.listdir(lj):
        if old in item:
            newitem = item.replace(old,new)
            os.rename(lj+"\\"+item,lj+"\\"+newitem)


    print(all_file)
    print('rename_support.do_rename')
    sys.stdout.flush()

def selectPath():
    global lj
    lj=askdirectory()
    lujing.set(lj)
    print('rename_support.selectPath')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import rename.py
    rename.py.vp_start_gui()




